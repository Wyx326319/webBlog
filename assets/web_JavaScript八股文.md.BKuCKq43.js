import{_ as e,c as t,a2 as r,o}from"./chunks/framework.BQmytedh.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"web/JavaScript八股文.md","filePath":"web/JavaScript八股文.md","lastUpdated":1744275753000}'),i={name:"web/JavaScript八股文.md"};function n(s,a,l,c,d,p){return o(),t("div",null,a[0]||(a[0]=[r('<h2 id="_1-js中的数据类型" tabindex="-1">1.js中的数据类型 <a class="header-anchor" href="#_1-js中的数据类型" aria-label="Permalink to &quot;1.js中的数据类型&quot;">​</a></h2><p>在js中有8种数据类型，包括基本数据类型和引用数据类型，基本数据类型为: null, undefined, string, boolean, number, symbol, bigInt,引用数据类型为 Object. 其中symbol和bigint是es6新增的数据类型。</p><p>在这里面有很多需要注意的问题:</p><ol><li>转换问题: 显示转换: 转为数值类型: Number(), parseInt(), parseFloat() 转为字符串类型: String(), toString() 隐式转换: 转为数值类型: +符号 / + 0 转为字符串: + &#39;&#39;, <code>${}</code>所有插入的值都会通过toStirng()转换为字符串</li><li>模板字符串中会保留字符串中的空格，需注意!</li></ol><h2 id="_2-作用域" tabindex="-1">2. 作用域 <a class="header-anchor" href="#_2-作用域" aria-label="Permalink to &quot;2. 作用域&quot;">​</a></h2>',5)]))}const m=e(i,[["render",n]]);export{b as __pageData,m as default};
