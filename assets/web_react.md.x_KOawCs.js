import{_ as e,c as t,a2 as r,o}from"./chunks/framework.BQmytedh.js";const m=JSON.parse('{"title":"React","description":"","frontmatter":{},"headers":[],"relativePath":"web/react.md","filePath":"web/react.md","lastUpdated":1751384237000}'),s={name:"web/react.md"};function l(c,a,n,d,i,h){return o(),t("div",null,a[0]||(a[0]=[r(`<h1 id="react" tabindex="-1">React <a class="header-anchor" href="#react" aria-label="Permalink to &quot;React&quot;">​</a></h1><h3 id="_1-react自定义组件的两种方式" tabindex="-1">1. react自定义组件的两种方式 <a class="header-anchor" href="#_1-react自定义组件的两种方式" aria-label="Permalink to &quot;1. react自定义组件的两种方式&quot;">​</a></h3><h4 id="工厂函数创建组件" tabindex="-1">工厂函数创建组件 <a class="header-anchor" href="#工厂函数创建组件" aria-label="Permalink to &quot;工厂函数创建组件&quot;">​</a></h4><h4 id="es6class类组件" tabindex="-1">ES6Class类组件 <a class="header-anchor" href="#es6class类组件" aria-label="Permalink to &quot;ES6Class类组件&quot;">​</a></h4><h3 id="_2-render渲染组件的基本流程" tabindex="-1">2. render渲染组件的基本流程 <a class="header-anchor" href="#_2-render渲染组件的基本流程" aria-label="Permalink to &quot;2. render渲染组件的基本流程&quot;">​</a></h3><pre><code>- react内部会创建组件的实例对象
- 得到包含虚拟dom并且解析为真实的dom
- 插入指定的页面元素里面
</code></pre><h3 id="_3-state" tabindex="-1">3. state <a class="header-anchor" href="#_3-state" aria-label="Permalink to &quot;3. state&quot;">​</a></h3><ul><li>组件对象最重要的属性，放组件数据的地方 值是对象</li><li>组件又叫做状态机，通过改变state来改变组件的状态(组件的重新渲染)</li></ul>`,8)]))}const b=e(s,[["render",l]]);export{m as __pageData,b as default};
